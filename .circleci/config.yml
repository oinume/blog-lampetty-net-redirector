version: 2

env: &env
  GCP_PROJECT_ID: blog-lampetty-net-redirector

gitconfig: &gitconfig
  name: "Set .gitconfig"
  command: |
    echo "" > ~/.gitconfig
    git config --global url."https://github.com".insteadOf git://github.com
    git config --global http.https://gopkg.in.followRedirects true

jobs:
  test:
    working_directory: /go/src/github.com/oinume/blog-lampetty-net-redirector
    docker:
      - image: golang:1.15-buster
    steps:
      - checkout
      - run:
          <<: *gitconfig
#      - run:
#          name: "Run go-lint"
#          command: make go-lint
      - run:
          name: "Run test"
          command: |
            make test

  deploy-image:
    environment:
      <<: *env
    working_directory: /go/src/github.com/oinume/blog-lampetty-net-redirector
    docker:
      - image: docker:18.06.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: true
      - run:
          <<: *gitconfig
      - run:
          name: Install dependency apk packages
          command: |
            apk --no-cache add \
              bash \
              curl \
              curl-dev \
              make \
              python
      - restore_cache:
          key: google-cloud-sdk-244.0.0
      - run:
          name: "Install google-cloud-sdk"
          command: |
            ./ci/install-google-cloud-sdk.sh 244.0.0 /google-cloud-sdk
      - save_cache:
          key: google-cloud-sdk-244.0.0
          paths:
            - /google-cloud-sdk
      - run:
          name: "Activate GCP service account"
          command: |
            echo $GCP_SERVICE_ACCOUNT_KEY | base64 -d > ./gcp-service-account-key.json
            gcloud auth activate-service-account --key-file ./gcp-service-account-key.json
      - run:
          name: "Deploy Docker image to GCR and Cloud Run"
          command: |
            COMMIT=$(git describe --always --tag)
            IMAGE_TAG=$(echo "${CIRCLE_BRANCH}" | tr '._/' '-' | tr '[:upper:]' '[:lower:]')-"${COMMIT}"
            echo ${IMAGE_TAG}
            make gcloud/builds IMAGE_TAG=${IMAGE_TAG}
            if [ $CIRCLE_BRANCH = "master" ]; then
              gcloud components install beta
              gcloud config set run/region us-central1
              gcloud beta run deploy --project ${GCP_PROJECT_ID} --image gcr.io/${GCP_PROJECT_ID}/server:${IMAGE_TAG}
            fi

workflows:
  version: 2
  build-workflow:
    jobs:
      - test:
          filters:
            branches:
              only: /.*/
      - deploy-image:
          requires:
            - test
          filters:
            branches:
              only: /.*/
